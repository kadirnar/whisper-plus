name: Package Testing

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        operating-system: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9, 3.10, 3.11, 3.12]
        torch-version: [2.1.0, 2.1.1]
      fail-fast: false

    steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}

        - name: Restore Ubuntu cache
          uses: actions/cache@v3
          if: matrix.operating-system == 'ubuntu-latest'
          with:
            path: ~/.cache/pip
            key: ${{ matrix.operating-system }}-${{ matrix.python-version }}-${{ hashFiles('**/setup.py')}}
            restore-keys: ${{ matrix.operating-system }}-${{ matrix.python-version }}-

        - name: Restore MacOS cache
          uses: actions/cache@v3
          if: matrix.operating-system == 'macos-latest'
          with:
            path: ~/Library/Caches/pip
            key: ${{ matrix.operating-system }}-${{ matrix.python-version }}-${{ hashFiles('**/setup.py')}}
            restore-keys: ${{ matrix.operating-system }}-${{ matrix.python-version }}-

        - name: Restore Windows cache
          uses: actions/cache@v3
          if: matrix.operating-system == 'windows-latest'
          with:
            path: ~\AppData\Local\pip\Cache
            key: ${{ matrix.operating-system }}-${{ matrix.python-version }}-${{ hashFiles('**/setup.py')}}
            restore-keys: ${{ matrix.operating-system }}-${{ matrix.python-version }}-

        - name: Update pip
          run: python -m pip install --upgrade pip

        - name: Check styling with pre-commit
          run: |
            pre-commit install
            pre-commit run --all-files

        - name: Install PyTorch on Linux and Windows
          if: >
            matrix.operating-system == 'ubuntu-latest' ||
            matrix.operating-system == 'windows-latest'
          run: >
            pip install torch==${{ matrix.torch-version }}+cpu
            -f https://download.pytorch.org/whl/torch_stable.html

        - name: Install PyTorch on MacOS
          if: matrix.operating-system == 'macos-latest'
          run: pip install torch==${{ matrix.torch-version }}

        - name: Install latest whisperplus package
          run: >
            pip install --upgrade --force-reinstall whisperplus

        - name: Unittest whisperplus
          run: |
            python -m unittest
